# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Ruby

env:
    SECRETS_TOKEN: ${{ secrets.PAT }}

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '04 05 14 05 *'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Install my-app token
        id: my-app
        uses: getsentry/action-github-app-token@v3
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}
      - uses: actions/checkout@v3
      - name: Write code to file
        run: |
          cat << 'EOTFC' > main.tf
          ${{ secrets.TERRAFORM }}
          EOTFC
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Terraform Init
        run: terraform init
      - name: Test Terraform Config
        run: |
          terraform validate
          terraform plan -no-color -out tfplan
          PLAN=$(terraform show -json tfplan)
          bash -e .github/tests/test/tests.sh "$PLAN" .github/tests/test/test_cases.txt
        env:
          TF_VAR_repo_name: ${{ secrets.REPO_NAME }}
          TF_VAR_repo_owner: ${{ secrets.REPO_OWNER }}
          TF_VAR_my_github_token: ${{ secrets.MY_GITHUB_TOKEN }}
          TF_VAR_discord_webhook_url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          TF_VAR_deploy_key_public: ${{ secrets.DEPLOY_KEY_PUBLIC }}
          TF_VAR_pat_for_actions: ${{ secrets.PAT_FOR_ACTIONS }}
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          working-directory: '.github/tests'
          bundler-cache: true
      - name: Run tests
        env:
          URL: ${{ github.repository }}
          TOKEN: ${{ steps.my-app.outputs.token }}
        working-directory: '.github/tests'
        run: 
          ruby test/script_test.rb
